/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 SmartDrone_anim.glb
*/

import { useLayoutEffect, useRef } from "react";
import { useSnapshot } from "valtio";

import { modelColorState } from "@/components/molecules/Picker";
import usePlayer from "@/hooks/usePlayer";
import { RobotColor, RobotMotion } from "@/types";
import { useAnimations, useGLTF, useTexture } from "@react-three/drei";

export default function SmartDroneAnim(props) {
  const group = useRef();
  const snap = useSnapshot(modelColorState);
  const player = usePlayer();

  const bodyColor = (() => {
    if (player.color) return player.color;
    else {
      return snap.items.SmartDrone_Body_Material ?? RobotColor.BLACK;
    }
  })();
  const { nodes, materials, animations } = useGLTF(
    "/assets/models/SmartDrone/Glb/SmartDrone_anim.glb",
  );
  const texture = useTexture(`/assets/models/SmartDrone/Texture/SmartDrone_B_${bodyColor}.png`);

  const { actions, mixer } = useAnimations(animations, group);

  useLayoutEffect(() => {
    // 몸체 색상을 교체하면 진행중이었던 모든 애니메이션 초기화
    actions[RobotMotion.ACTION].reset();
    actions[RobotMotion.IDLE].reset();

    // ACTION 타입 애니메이션 한번 보여준 다음,
    // 기본 타입 애니메이션 반복 재생
    actions[RobotMotion.ACTION].play().fadeOut(3);
    actions[RobotMotion.IDLE]
      .reset()
      .setEffectiveTimeScale(1)
      .setEffectiveWeight(1)
      .fadeIn(3)
      .play();
  }, [mixer, bodyColor]);

  useLayoutEffect(() => {
    texture.flipY = false;
    Object.assign(materials?.SmartDrone_Body_Material, {
      map: texture,
    });
  }, [materials, texture]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.025} position={[0, -0.8, 0]}>
          <primitive object={nodes.Bone_Body_A} />
          <group name="Body">
            <skinnedMesh
              name="Mesh054"
              geometry={nodes.Mesh054.geometry}
              material={materials.SmartDrone_Body_Material}
              skeleton={nodes.Mesh054.skeleton}
            />
            <skinnedMesh
              name="Mesh054_1"
              geometry={nodes.Mesh054_1.geometry}
              material={materials.SmartDrone_Face_Material}
              skeleton={nodes.Mesh054_1.skeleton}
            />
          </group>
          <skinnedMesh
            name="Leg_Left_Back_A"
            geometry={nodes.Leg_Left_Back_A.geometry}
            material={materials.SmartDrone_Body_Material}
            skeleton={nodes.Leg_Left_Back_A.skeleton}
          />
          <skinnedMesh
            name="Leg_Left_Back_B"
            geometry={nodes.Leg_Left_Back_B.geometry}
            material={materials.SmartDrone_Body_Material}
            skeleton={nodes.Leg_Left_Back_B.skeleton}
          />
          <skinnedMesh
            name="Leg_Left_Front_A"
            geometry={nodes.Leg_Left_Front_A.geometry}
            material={materials.SmartDrone_Body_Material}
            skeleton={nodes.Leg_Left_Front_A.skeleton}
          />
          <skinnedMesh
            name="Leg_Left_Front_B"
            geometry={nodes.Leg_Left_Front_B.geometry}
            material={materials.SmartDrone_Body_Material}
            skeleton={nodes.Leg_Left_Front_B.skeleton}
          />
          <skinnedMesh
            name="Leg_Right_Back_A"
            geometry={nodes.Leg_Right_Back_A.geometry}
            material={materials.SmartDrone_Body_Material}
            skeleton={nodes.Leg_Right_Back_A.skeleton}
          />
          <skinnedMesh
            name="Leg_Right_Back_B"
            geometry={nodes.Leg_Right_Back_B.geometry}
            material={materials.SmartDrone_Body_Material}
            skeleton={nodes.Leg_Right_Back_B.skeleton}
          />
          <skinnedMesh
            name="Leg_Right_Front_A"
            geometry={nodes.Leg_Right_Front_A.geometry}
            material={materials.SmartDrone_Body_Material}
            skeleton={nodes.Leg_Right_Front_A.skeleton}
          />
          <skinnedMesh
            name="Leg_Right_Front_B"
            geometry={nodes.Leg_Right_Front_B.geometry}
            material={materials.SmartDrone_Body_Material}
            skeleton={nodes.Leg_Right_Front_B.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/assets/models/SmartDrone/Glb/SmartDrone_anim.glb");
